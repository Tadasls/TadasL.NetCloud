// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P004_EF_Application.Data;

#nullable disable

namespace P004EFApplication.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20221208172258_atnaujinta")]
    partial class atnaujinta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("P004_EF_Application.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpiceLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("DishId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 12, 8, 19, 22, 58, 280, DateTimeKind.Local).AddTicks(8342),
                            ImagePath = "",
                            Name = "Fried Bread Sticks",
                            SpiceLevel = "Mild",
                            Type = "Snacks",
                            UpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DishId = 2,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 12, 8, 19, 22, 58, 280, DateTimeKind.Local).AddTicks(8376),
                            ImagePath = "",
                            Name = "Potato dumplings",
                            SpiceLevel = "low",
                            Type = "Main dish",
                            UpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DishId = 3,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 12, 8, 19, 22, 58, 280, DateTimeKind.Local).AddTicks(8379),
                            ImagePath = "",
                            Name = "Kibinai",
                            SpiceLevel = "low",
                            Type = "Street Food",
                            UpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("P004_EF_Application.Models.RecipeItem", b =>
                {
                    b.Property<int>("RecipeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Calories")
                        .HasColumnType("REAL");

                    b.Property<int>("DishId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeItemId");

                    b.HasIndex("DishId");

                    b.ToTable("RecipyItems");

                    b.HasData(
                        new
                        {
                            RecipeItemId = 1,
                            Calories = 150.0,
                            DishId = 1,
                            Name = "Duona"
                        },
                        new
                        {
                            RecipeItemId = 2,
                            Calories = 300.0,
                            DishId = 1,
                            Name = "Chhese"
                        },
                        new
                        {
                            RecipeItemId = 3,
                            Calories = 300.0,
                            DishId = 1,
                            Name = "Mayo"
                        },
                        new
                        {
                            RecipeItemId = 4,
                            Calories = 50.0,
                            DishId = 1,
                            Name = "Garlic"
                        },
                        new
                        {
                            RecipeItemId = 5,
                            Calories = 400.0,
                            DishId = 2,
                            Name = "Potatos"
                        },
                        new
                        {
                            RecipeItemId = 6,
                            Calories = 500.0,
                            DishId = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            RecipeItemId = 7,
                            Calories = 300.0,
                            DishId = 2,
                            Name = "SourCream"
                        },
                        new
                        {
                            RecipeItemId = 8,
                            Calories = 300.0,
                            DishId = 3,
                            Name = "Dought"
                        },
                        new
                        {
                            RecipeItemId = 9,
                            Calories = 300.0,
                            DishId = 3,
                            Name = "Meat"
                        },
                        new
                        {
                            RecipeItemId = 10,
                            Calories = 300.0,
                            DishId = 3,
                            Name = "Salt"
                        });
                });

            modelBuilder.Entity("P04_EF_Applying_To_API.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");
                });

            modelBuilder.Entity("P004_EF_Application.Models.RecipeItem", b =>
                {
                    b.HasOne("P004_EF_Application.Models.Dish", "Dish")
                        .WithMany("RecipeItems")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("P004_EF_Application.Models.Dish", b =>
                {
                    b.Navigation("RecipeItems");
                });
#pragma warning restore 612, 618
        }
    }
}
