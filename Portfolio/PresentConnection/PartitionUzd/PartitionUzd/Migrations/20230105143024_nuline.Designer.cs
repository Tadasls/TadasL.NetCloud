// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartitionUzd.Database;

#nullable disable

namespace PartitionUzd.Migrations
{
    [DbContext(typeof(PCDBContext))]
    [Migration("20230105143024_nuline")]
    partial class nuline
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PartitionUzd.Models.Email", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("alternate")
                        .HasColumnType("bit");

                    b.Property<string>("tenant")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("email");

                    b.HasIndex("tenant");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("PartitionUzd.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("partitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasAlternateKey("partitionKey");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("partitionKey"));

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PartitionUzd.Models.Root", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("partitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("PartitionUzd.Models.Tenant", b =>
                {
                    b.Property<string>("tenant")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rootid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("objectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("tenant");

                    b.HasAlternateKey("userPrincipalName");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("userPrincipalName"));

                    b.HasIndex("Rootid");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("PartitionUzd.Models.Email", b =>
                {
                    b.HasOne("PartitionUzd.Models.Tenant", null)
                        .WithMany("emails")
                        .HasForeignKey("tenant");
                });

            modelBuilder.Entity("PartitionUzd.Models.Tenant", b =>
                {
                    b.HasOne("PartitionUzd.Models.Root", null)
                        .WithMany("tenants")
                        .HasForeignKey("Rootid");
                });

            modelBuilder.Entity("PartitionUzd.Models.Root", b =>
                {
                    b.Navigation("tenants");
                });

            modelBuilder.Entity("PartitionUzd.Models.Tenant", b =>
                {
                    b.Navigation("emails");
                });
#pragma warning restore 612, 618
        }
    }
}
