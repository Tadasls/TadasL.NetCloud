// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PressentConnection.Data;

#nullable disable

namespace PressentC.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PressentConnection.Program+Email", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("alternative")
                        .HasColumnType("bit");

                    b.Property<string>("tenantobjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("email");

                    b.HasIndex("tenantobjectId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("PressentConnection.Program+Root", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("partitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("PressentConnection.Program+Tenant", b =>
                {
                    b.Property<string>("objectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rootid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("tenant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("objectId");

                    b.HasIndex("Rootid");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("PressentConnection.Project", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PressentConnection.Program+Email", b =>
                {
                    b.HasOne("PressentConnection.Program+Tenant", "tenant")
                        .WithMany("emails")
                        .HasForeignKey("tenantobjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tenant");
                });

            modelBuilder.Entity("PressentConnection.Program+Tenant", b =>
                {
                    b.HasOne("PressentConnection.Program+Root", "Root")
                        .WithMany("tenants")
                        .HasForeignKey("Rootid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");
                });

            modelBuilder.Entity("PressentConnection.Program+Root", b =>
                {
                    b.Navigation("tenants");
                });

            modelBuilder.Entity("PressentConnection.Program+Tenant", b =>
                {
                    b.Navigation("emails");
                });
#pragma warning restore 612, 618
        }
    }
}
